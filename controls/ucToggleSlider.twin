[Description("")]
[FormDesignerId("7E03156F-8E7D-4568-A9FF-FDAEF38881DB")]
[ClassId("2478CAA6-A46F-4350-BBFB-F42F68CEA067")]
[InterfaceId("D1E54BC7-0AE6-46D6-8F84-1E15F78FC40B")]
[EventInterfaceId("5113FF98-BD9F-47E3-9D01-EAC5D218351B")]
[COMControl]
Class ucToggleSlider

	Sub New()
	End Sub
    
    Private m_IsOn As Boolean
    Private m_ThumbPos As Single
    Private m_ThumbX As Single
    Private m_TargetX As Single
    Private m_SlideSpeed As Single
    Private m_OnColor As Long
    Private m_OffColor As Long
    Private m_ThumbColor As Long

    Public Event StateChanged(ByVal NewState As Boolean)
    
    Private Sub UserControl_Initialize()
        m_IsOn = False
        Dim radius As Single
        radius = (UserControl.ScaleHeight \ 2) - 2
        m_ThumbX = radius + 2
        m_TargetX = m_ThumbX
        
        ' set defaults if nothing has been set
        If m_SlideSpeed = 0 Then m_SlideSpeed = 2
        If m_OnColor = 0 Then m_OnColor = &H66CC66
        If m_OffColor = 0 Then m_OffColor = &HE0E0E0
        If m_ThumbColor = 0 Then m_ThumbColor = vbWhite

    End Sub
    
    Public Property Get IsOn() As Boolean
        IsOn = m_IsOn
    End Property

    Public Property Let IsOn(Value As Boolean)
        m_IsOn = Value
        RaiseEvent StateChanged(m_IsOn)
        UserControl.Refresh
    End Property

    Public Property Get SlideSpeed() As Single
        SlideSpeed = m_SlideSpeed
    End Property

    Public Property Let SlideSpeed(ByVal Value As Single)
        m_SlideSpeed = Abs(Value)
    End Property

    Public Property Get OnColor() As Long
        OnColor = m_OnColor
    End Property

    Public Property Let OnColor(ByVal Value As Long)
        m_OnColor = Value
    End Property
    
    Private Sub UserControl_Paint()
        Static firstTime As Boolean = True ' the placement of the thumb depends on first run
        
        Const padding As Single = 2
        Dim radius As Single
        radius = (UserControl.ScaleHeight \ 2) - padding

        Dim bgColor As Long: bgColor = IIf(m_IsOn, m_OnColor, m_OffColor) ' color the toggle accordingly  
        Dim centerY As Single: centerY = UserControl.ScaleHeight \ 2

        ' Clear previous drawing
        UserControl.Cls
        UserControl.FillStyle = vbFSSolid
        UserControl.ForeColor = bgColor
        UserControl.FillColor = bgColor

        ' Draw pill-shaped background: center bar + caps
        UserControl.Line (radius + padding, padding)-(UserControl.ScaleWidth - radius - padding, UserControl.ScaleHeight - padding), bgColor, BF
        UserControl.Circle (radius + padding, centerY), radius, bgColor
        UserControl.Circle (UserControl.ScaleWidth - radius - padding, centerY), radius, bgColor

        ' Calculate thumb position
        Dim thumbX As Single
        If firstTime Then
            ' this positions the thumb the first time the toggle is drawn
            thumbX = IIf(m_IsOn, UserControl.ScaleWidth - radius - padding, radius + padding)
            firstTime = False
            m_ThumbX = thumbX
        Else
            ' the timer takes care of sliding it once clicked
            thumbX = m_ThumbX
        End If

        ' Draw thumb
        UserControl.FillColor = m_ThumbColor
        UserControl.ForeColor = m_ThumbColor
        UserControl.Circle (thumbX, centerY), radius - 2, m_ThumbColor

    End Sub
    
    Private Sub UserControl_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
        m_IsOn = Not m_IsOn
        RaiseEvent StateChanged(m_IsOn)

        ' Calculate target position
        Dim radius As Single
        radius = (UserControl.ScaleHeight \ 2) - 2
        m_TargetX = IIf(m_IsOn, UserControl.ScaleWidth - radius - 2, radius + 2)

        tmrSlide.Enabled = True
    End Sub
    
    Private Sub UserControl_MouseDownX(Button As Integer, Shift As Integer, X As Single, Y As Single)
        ' Toggle state
        m_IsOn = Not m_IsOn
        RaiseEvent StateChanged(m_IsOn)
        UserControl.Refresh
    End Sub

    Private Sub tmrSlide_Timer()
        
        ' the timer slides the thumb off and on
        If Abs(m_ThumbX - m_TargetX) <= m_SlideSpeed Then
            m_ThumbX = m_TargetX
            tmrSlide.Enabled = False
        ElseIf m_ThumbX < m_TargetX Then
            m_ThumbX = m_ThumbX + m_SlideSpeed
        Else
            m_ThumbX = m_ThumbX - m_SlideSpeed
        End If

        UserControl.Refresh
    End Sub
    
    Private Sub UserControl_Resize()
        ' Force thumb recalc and repaint on resize
        Dim radius As Single
        radius = (UserControl.ScaleHeight \ 2) - 2
        m_ThumbX = IIf(m_IsOn, UserControl.ScaleWidth - radius - 2, radius + 2)
        m_TargetX = m_ThumbX
        UserControl.Refresh
    End Sub
    
End Class