[Description("")]
[FormDesignerId("0F4058BF-ACF9-4305-B830-80DC9A2A0FF8")]
[PredeclaredId]
Class frmRevert

    Dim localVersions As String = ";"
    Dim revertToCLs As New colChangeLogItems
    Dim revertToVersion As Integer
    Dim revertToVersionRequiresDownload As Boolean
    Dim ignoreClickEvent As Boolean
    Private Const maxVersions = 9
    
    Private Sub Form_Load()
        
        ShowStatusMessage "Opening Revert"
        
        ignoreClickEvent = True
        FillAvailableZips
        ignoreClickEvent = False
        
        SetupButtons
        SetChangeLogHeader
        
        lblCurrentVersion.Caption = tbHelperSettings.twinBASICFolder & "                containing: " & tbHelperClass.InstalledtBVersion
        lblCurrentDownloadFolder.Caption = tbHelperSettings.DownloadFolder
        
        ShowStatusMessage "Ready"
    End Sub

    Private Sub Form_Unload(Cancel As Integer)
        
        Set revertToCLs = Nothing
        
    End Sub
    
    Private Sub SetupButtons()
                
        ConfigureCustomButton btnRevert, "Revert", CUST_BTN_BCOLOR, vbWhite, App.Path & "\revert.png", 20, False, False
        ConfigureCustomButton btnGetVersionsFromGitHub, "Get Versions From GitHub", CUST_BTN_BCOLOR, vbWhite, App.Path & "\download.png", 20, True, False
        
    End Sub
    
    Private Sub FillAvailableZips()

        ' find any available local zip files to revert to
        Dim tBZipFiles As String
        Dim zipFileVersion As String
        Dim zipFileName As String
        
        tBZipFiles = Dir(tbHelperSettings.DownloadFolder & "twinBASIC_IDE_BETA_*.*")

        If Len(tBZipFiles) > 0 Then
            ZipPicker.Item = "Select version to revert to"
        Else
            ' TODO: ask the user if they want this to go to GitHub and get the versions from Pg1 of the releases
            '       without them having to click the "Get from GitHub" button
            ZipPicker.Item = "No local previous versions found"
            Exit Sub
        End If

        Do While Len(tBZipFiles) > 0
            ' don't include the installed version zip file
            If InStr(tBZipFiles, "_" & tbHelperClass.InstalledtBVersion & ".zip") = 0 Then
            
                ' get just the filename from the full path
                zipFileName = fso.GetFileName(tBZipFiles)
                
                ' find the version number in the file name
                zipFileVersion = Mid(zipFileName, InStr(zipFileName, "BETA_") + 5, 4)
                If Right(zipFileVersion, 1) = "." Then zipFileVersion = Left(zipFileVersion, Len(zipFileVersion) - 1)
                
                ' keeping the list of revertable versions to with in 9 from the previous version 
                ' of the current installed version
                If tbHelperClass.InstalledtBVersion - maxVersions <= CInt(zipFileVersion) Then
                    ' save a list of the versions of available in the local zip files
                    localVersions = localVersions & zipFileVersion & ";"

                    lstZipFiles.AddItem(zipFileName)
                End If
                
            End If
            tBZipFiles = Dir()
        Loop
        
        ' if there are 9 locally to choose from, no need to grab any from GitHub
        If lstZipFiles.ListCount = 9 Then
            btnGetVersionsFromGitHub.Enabled = False
            btnGetVersionsFromGitHub.ToolTipText = "The max number of versions to revert too are local"
        End If
        
    End Sub
    
    Private Sub ZipPicker_DropDown()

        ' toggle the dropdown if it is visible
        If lstZipFiles.Visible Then
            HideZipList()
            Exit Sub
        End If

        ' Find the currently selected version in the list and highlight it
        Dim i As Long
        For i = 0 To lstZipFiles.ListCount - 1
            If lstZipFiles.List(i) = ZipPicker.Item Then
                lstZipFiles.ListIndex = i
                Exit For
            End If
        Next i

        Const BORDER_SIZE As Long = 15 ' 1 pixel in Twips
        Const LIST_HEIGHT As Long = 1200
        
        With lstZipFiles
            .Width = ZipPicker.Width - (BORDER_SIZE * 2)
            .Height = LIST_HEIGHT
            .Left = ZipPicker.Left
            .Top = ZipPicker.Top + ZipPicker.Height
            .Visible = True
        End With

        With picDropDownBorder
            .Move lstZipFiles.Left - BORDER_SIZE, _
                    lstZipFiles.Top - BORDER_SIZE, _
                    lstZipFiles.Width + (BORDER_SIZE * 2), _ 
                    lstZipFiles.Height + (BORDER_SIZE * 2)
            .Visible = True
        End With

        ApplyBottomRoundedCorners picDropDownBorder, 4, 4 ' Apply to the border first
        ApplyBottomRoundedCorners lstZipFiles, 4, 4, True         ' Then apply to the listbox
            
        BringWindowToTop picDropDownBorder.hWnd ' Bring border to the top
        BringWindowToTop lstZipFiles.hWnd

    End Sub
    
    Private Sub HideZipList()
    
        lstZipFiles.Visible = False
        picDropDownBorder.Visible = False
    
    End Sub
    
    Private Sub lstZipFiles_Click()
        
        If lstZipFiles.ListIndex > -1 Then
            Me.MousePointer = vbHourglass
            ZipPicker.Item = lstZipFiles.Text ' Update the picker display
            ZipPicker.Collapse()
            
            ' Hide the list
            HideZipList
            
            ' Show Change Log for the select twinBASIC version
            Dim selectedVersion As Integer
            selectedVersion = Mid(lstZipFiles.List(lstZipFiles.ListIndex), InStr(lstZipFiles.List(lstZipFiles.ListIndex), "BETA_") + 5, 4)
            If Right(selectedVersion, 1) = "." Then selectedVersion = Left(selectedVersion, Len(selectedVersion) - 1)
            
            ' is this version available locally?
            ' compare the version selected against the list stored in a string when the dropdown was first filled
            revertToVersionRequiresDownload = InStr(localVersions, ";" & selectedVersion & ";") > -1
        
            revertToVersion = CInt(selectedVersion)
        
            lblChangeLogTitle.Caption = "ChangeLog for version " & selectedVersion
            FillChangeLogView()
        
            btnRevert.Enabled = True
            Me.MousePointer = vbDefault
        End If
    End Sub
    
    Private Sub Form_Click()
        ZipPicker.Collapse()
        HideZipList
    End Sub

    Private Sub FillChangeLogView()

        Dim revertToCL As clsChangeLogItem
        Dim itemColor As Long
        Dim colNum As Integer
        
        rvtVersionChangeLog.ClearEntries()
        If revertToCLs.Count > 0 Then
            ' the user clicked the get from github button or selected a zip to view once
            FillEntries()
        Else
            Dim localLogs As New colHistoryLogItems
            
            ' check for the local log file having the change log of the selected version to revert to
            If Not localLogs.SearchLog() Then
                ' there are no logs to use
                If revertToCLs Is Nothing Then GetChangeLogsFromGitHub()
                    
                FillEntries()
            Else
                ' there is a log file, search for the selected version change log
                Dim Li As Integer
                
                ' add the logs to the object the fill grid uses
                For Li = 1 To localLogs.Count
                    Set revertToCL = localLogs.Item(Li).LogCLI
                    If revertToCL.tBVersion = revertToVersion Then
                        revertToCLs.Add(revertToCL.tBVersion, revertToCL.Type, revertToCL.Notes)
                    End If
                    Set revertToCL = Nothing
                Next
                
                If revertToCLs.Count = 0 Then
                    ' the change log is not in the history log, fetch it from the releases page
                    GetChangeLogsFromGitHub()
                End If
                
                FillEntries()

            End If
            
            Set localLogs = Nothing
            
        End If
                
        Set revertToCL = Nothing
        
    End Sub

    Private Sub GetChangeLogsFromGitHub()
        
        ShowStatusMessage "Collecting data from Github"
            tbHelperClass.InstalledtBVersion = tbHelperClass.InstalledtBVersion - maxVersions  ' set the code to get the 9 prev versions
            revertToCLs.GetNewerReleasedVersions()
            tbHelperClass.InstalledtBVersion = tbHelperClass.InstalledtBVersion + maxVersions  ' return the installed version back
        ShowStatusMessage "done", True
        
    End Sub

    Private Sub FillGitHubZips()
        
        ' display a like of the last 9 versions the user can to revert to
        Dim revertToCL As clsChangeLogItem
        Dim lastVersionAdded As Integer = 0
       
        ' load the change logs of the previous 10 twinBASIC versions, uses 10 because the newest will be ignored 
        ' if it is the same as the one installed, if not then it'll be an available version to update to
        ' just incase one is made available inbetween last check and now
        GetChangeLogsFromGitHub()
        
        ZipPicker.Item = "Select version to revert to"
        
        lstZipFiles.Clear()
        For Each revertToCL In revertToCLs
            
            If revertToCL.tBVersion <> tbHelperClass.InstalledtBVersion Then
                ' only need to write the versions to the dropdown once
                If revertToCL.tBVersion <> lastVersionAdded Then
                
                    ' indicate location of each version written 
                    Dim versionNote As String
                    
                    If revertToCL.tBVersion > tbHelperClass.InstalledtBVersion Then
                        versionNote = "[*NEW*]" ' found a new tB version
                    ElseIf InStr(localVersions, ";" & revertToCL.tBVersion & ";") > 1 Then
                        versionNote = "[local]" ' this is available locally
                    Else
                        versionNote = ""
                    End If
                    
                    lstZipFiles.AddItem("twinBASIC_IDE_BETA_" & revertToCL.tBVersion & ".zip" & " " & versionNote)
                    lastVersionAdded = revertToCL.tBVersion
                End If
            End If
        Next
        
        ' check to make sure the last version is added, 
        ' if this if statement fails then page 1 of the releases page doesn't have 11 to choose from
        If lastVersionAdded = tbHelperClass.InstalledtBVersion Then
            lstZipFiles.AddItem("twinBASIC_IDE_BETA_" & lastVersionAdded & ".zip") ' add the last one
        End If
'        ElseIf lastVersionAdded < tbHelperClass.InstalledtBVersion Then
        ' 9 aren't available - adjust the caption above the dropdown list
 '       lblAvailableZips.Caption = "Only 9 avail from Pg:1 Releases "
    
    End Sub
    
    Private Sub FillEntries()
        
        Dim revertToCL As clsChangeLogItem
        For Each revertToCL In revertToCLs
            If revertToCL.tBVersion = revertToVersion Then
                rvtVersionChangeLog.AddEntry(revertToCL.Type, revertToCL.Notes)
                'DoEvents()
            End If
        Next
        
    End Sub
    
    Private Sub SetChangeLogHeader()
        
        Dim clgColumns(1) As New clsChangeLogColumn
        clgColumns(0).Name = "TYPE"
        clgColumns(0).Width = 140
        clgColumns(0).WrappedEnabled = False

        clgColumns(1).Name = "DESCRIPTION"
        clgColumns(1).Width = 550
        clgColumns(1).WrappedEnabled = True

        rvtVersionChangeLog.SetColumns = clgColumns

    End Sub
    
    Private Sub btnGetVersionsFromGitHub_Click()
        
        ignoreClickEvent = True  ' don't run the click event code when the versions from GitHub are added to the dropdown 
        'lblAvailableZips.Caption = "Last 9 versions to revert to "
        lblCurrentDownloadFolder.Caption = lblCurrentDownloadFolder.Caption & " and GitHub"
        ShowStatusMessage "Getting versions to revert to from GitHub"
        FillGitHubZips
        ShowStatusMessage "done", True
        ignoreClickEvent = False
        
    End Sub
    
    Private Sub btnRevert_Click()
        
        If MsgBox("Are you sure you want to revert the current version of twinBASIC (" & tbHelperClass.InstalledtBVersion & ") to version " & _ 
            revertToVersion & "?", vbYesNo, "Reverting twinBASIC") = vbNo Then Exit Sub
        
        ShowStatusMessage "Selected to revert from version " & tbHelperClass.InstalledtBVersion & " to " & revertToVersion
        
        ' check that the IDE is closed before attempting to revert
        If Not IsCodeRunningInTheIDE Then
            Do While IsProcessRunning("twinbasic.exe")
                ShowStatusMessage "not allowed while the IDE is open", True
                If MsgBox("The twinBASIC IDE is running, you can not revert to version " & revertToVersion & " while it is open." & vbCrLf & _ 
                    "Please close the IDE or click cancel to abort.", vbOKCancel, "Reverting twinBASIC") = vbCancel Then
                    btnRevert.Enabled = False
                    Exit Sub
                End If
            Loop
            
        Else
            ' this is for my dumb ass
            MsgBox("You can not revert while running the project in the IDE", vbInformation, "Revert twinBASIC")
            ShowStatusMessage "not allowed while in the IDE", True
            Exit Sub

        End If
        
        ' revert the version in the twinBASIC location
        Dim revertToZipFileName As String
        
        revertToZipFileName = tbHelperSettings.DownloadFolder & "\" & ZipPicker.Item
        revertToZipFileName = Replace(revertToZipFileName, "[local]", "")
        
        If revertToVersionRequiresDownload Then
        
            ' the user selected a version of twinBASIC that is not available locally
            Dim revertToURL As String = githubReleasesURL & "/download/beta-x-" & IIf(revertToVersion < 1000, "0" & CStr(revertToVersion), revertToVersion)
            
            ShowStatusMessage "Revert requires downloading twinBASIC " & revertToVersion
            URLDownloadToFile 0, revertToURL & "/" & ZipPicker.Item, revertToZipFileName, 0, 0
            ShowStatusMessage " - done ", True
                
        End If
        
        ShowStatusMessage "Expanding twinBASIC " & revertToVersion
        InstallTwinBasic(revertToZipFileName)
        ShowStatusMessage "done", True
    End Sub
    

End Class