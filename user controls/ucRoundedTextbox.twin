[Description("")]
[FormDesignerId("99FB4DD2-4D17-47E2-BDD1-F6E14C00B5F0")]
[ClassId("A938451B-4E4E-4A0F-B633-3BEF0BCDFD1E")]
[InterfaceId("BEDB4B1B-CA6A-4BC3-B7DB-2D7DBD690A24")]
[EventInterfaceId("1D5A78D5-5D9A-40FB-9AE1-CC64E2DC5C2B")]
[COMControl]
Class ucRoundedTextbox

	Sub New()
	End Sub
    
    Private m_BackColor As OLE_COLOR
    Private m_BorderColor As OLE_COLOR
    Private m_BorderRadius As Long
    Private m_BorderWidth As Long
    Private hWnd As LongPtr
    
    Public Property Let BackColor(ByVal value As OLE_COLOR)
        m_BackColor = value
        txtInput.BackColor = m_BackColor
    End Property
    
    Public Property Get BackColor() As OLE_COLOR
        BackColor = m_BackColor
    End Property
    
    Public Property Let BorderColor(ByVal Value As OLE_COLOR)
        m_BorderColor = Value
        'Refresh
        ApplyRoundedRegion
    End Property

    Public Property Let BorderRadius(ByVal Value As Long)
        m_BorderRadius = Value
        'Refresh
        ApplyRoundedRegion
    End Property

    Public Property Let BorderWidth(ByVal Value As Long)
        m_BorderWidth = Value
        'Refresh
        ApplyRoundedRegion
    End Property
    
    Public Property Get Text() As String
        Text = txtInput.Text
    End Property

    Public Property Let Text(ByVal Value As String)
        txtInput.Text = Value
    End Property

    Public Property Get Font() As StdFont
        Set Font = txtInput.Font
    End Property

    Public Property Set Font(ByVal Value As StdFont)
        Set txtInput.Font = Value
    End Property
    
    Private Sub ApplyRoundedRegion()
        
        ' Claude version
        If Width <= 0 Or Height <= 0 Then Exit Sub
    
        ' Convert from twips to pixels
        Dim w As Long: w = Width \ Screen.TwipsPerPixelX
        Dim h As Long: h = Height \ Screen.TwipsPerPixelY
        Dim r As Long: r = m_BorderRadius
    
        ' Create the rounded rectangle region
        Dim rgn As Long
        rgn = CreateRoundRectRgn(0, 0, w + 1, h + 1, r * 2, r * 2)
    
        If rgn <> 0 Then
            ' Apply the region to clip the control
            SetWindowRgn UserControl.hWnd, rgn, True
            ' Note: Don't delete the region object here - Windows takes ownership
        End If
        
        QueueRedraw(hWnd)
    End Sub
    
    Private Sub UserControl_Initialize()
        
        m_BackColor = &HFFFFFF
        m_BorderColor = &HCCCCCC
        m_BorderRadius = 6
        m_BorderWidth = 1
        
        hWnd = UserControl.hWnd
        
        ApplyRoundedRegion
        
        ucDictionary.Add Me.hWnd, Me
    End Sub
    
    Private Sub UserControl_Resize()
        
        Const padding As Long = 120
        txtInput.Move padding, padding \ 2, ScaleWidth - (padding * 2), ScaleHeight - padding
        
        ApplyRoundedRegion
        
        'Refresh
        
    End Sub
    
    Private Sub UserControl_Show()
        ApplyRoundedRegion
    End Sub
    
End Class